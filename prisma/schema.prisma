// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
    previewFeatures = ["referentialIntegrity"]
}

generator dbml {
  provider = "prisma-dbml-generator"
}

datasource db {
    provider = "mysql"
    referentialIntegrity = "prisma"
    url      = env("DATABASE_URL")
}

model Item {
    id String       @id @default(cuid())
    lists ItemInList[]
    name String     @unique
}

model List {
    id String           @id @default(cuid())
    name String         @unique
    ownerId String
    owner User          @relation("owned-lists", fields: [ownerId], references: [id])
    users User[]        @relation("lists")
    items ItemInList[]
}

model ItemInList {
    itemId String
    item Item           @relation(fields: [itemId], references: [id])
    listId String       
    list List           @relation(fields: [listId], references: [id])
    addedAt DateTime    @default(now())
    purchased Boolean   @default(false)
    quantity Int    @default(1)
    size String?    @db.Text
    assignedId String
    assigned User       @relation(fields: [assignedId], references: [id])

    @@id([itemId, listId])
}

// Necessary for Next auth
model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? @db.Text
    access_token      String? @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? @db.Text
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]
    lists         List[] @relation("lists")
    ownedLists    List[] @relation("owned-lists")
    assignedItems ItemInList[]
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}
